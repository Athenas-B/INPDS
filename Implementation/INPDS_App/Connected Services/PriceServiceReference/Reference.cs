//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace INPDS_App.PriceServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PriceServiceReference.IPriceService")]
    public interface IPriceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPriceService/CalculatePrice", ReplyAction="http://tempuri.org/IPriceService/CalculatePriceResponse")]
        double CalculatePrice(double distance, string systemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPriceService/CalculatePrice", ReplyAction="http://tempuri.org/IPriceService/CalculatePriceResponse")]
        System.Threading.Tasks.Task<double> CalculatePriceAsync(double distance, string systemId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPriceServiceChannel : INPDS_App.PriceServiceReference.IPriceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PriceServiceClient : System.ServiceModel.ClientBase<INPDS_App.PriceServiceReference.IPriceService>, INPDS_App.PriceServiceReference.IPriceService {
        
        public PriceServiceClient() {
        }
        
        public PriceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PriceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PriceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PriceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double CalculatePrice(double distance, string systemId) {
            return base.Channel.CalculatePrice(distance, systemId);
        }
        
        public System.Threading.Tasks.Task<double> CalculatePriceAsync(double distance, string systemId) {
            return base.Channel.CalculatePriceAsync(distance, systemId);
        }
    }
}
